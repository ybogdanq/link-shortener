org: ybogdanq
app: serverless-team-task
service: serverless
frameworkVersion: "3"

useDotenv: true

provider:
  name: aws
  runtime: nodejs18.x
  environment:
  iam:
    role:
      statements:
        - Effect: Allow
          Action:
            - dynamodb:*
          Resource:
            - arn:aws:dynamodb:us-east-1:726141157734:table/CustomerTable

plugins:
  - serverless-dotenv-plugin
  - serverless-offline
  - serverless-plugin-typescript

custom:
  serverless-offline:
    httpPort: 4000
  serverlessPluginTypescript:
    tsConfigFileLocation: "./tsconfig.build.json"

package:
  individually: true # an optimized package per function

functions:
  register:
    handler: src/functions/customer/register.handler
    events:
      - httpApi:
          path: /customer/register
          method: post
  login:
    handler: src/functions/customer/login.handler
    events:
      - httpApi:
          path: /customer/login
          method: get

resources:
  Resources:
    CustomerTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: CustomerTable
        BillingMode: PAY_PER_REQUEST
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: email
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: EmailIndex  # Name of the secondary index
            KeySchema:
              - AttributeName: email
                KeyType: HASH
            Projection:
              ProjectionType: ALL  # You can customize this based on your needs
